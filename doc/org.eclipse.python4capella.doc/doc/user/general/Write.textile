h1. Write a Python script

This section explains how you can write your Python4Capella script.

h2. Create a Python project

We advise that you store your own Python scripts in a separated project. This will prevent some losses when you update Python4Capella.

You can right click in the new / Project... menu, and select the PyDev project:

!Write/New_project.png(New PyDev project)!

You can select a name for your project and click the finish button.

Now you need to add your project to the list of script locations:

Select the Window > Preferences menu
  - select the Scripting / Script Locations
    - add your project by clicking the Add Workspace button


h2. Reference Python4Capella project

You need to add the Python4Capella project as a dependency of your project. To do so, you need to make sure you are in the PyDev perspective. If it's not the case, you can click on the perspective button on the top right corner of your Capella and select the PyDev perspective.
Then right click on your project and select the Properties menu. Then select the Project References menu:

!Write/Project_preferences.png(Project preferences)!

You can select the Python4Capella project to add it as a dependency. This way you will be able to access all the Capella APIs defined in the Python4Capella project.

h2. Create a Python script

To create a Python script in the context of Python4Capella, you first need to create a Python file and then import scripts from Python4Capella.

Create the Python file by right clicking the container where you want to create the file and select new / other... and select PyDev Module:

!Write/New_PyDev_module.png(New PyDev module)!

You can click next, select a name for your script and click finish, you will be asked to select a template, simply click the ok button:

!Write/New_PyDev_module_template.png(New PyDev module template)!

h2. Import required scripts

You will need to import the Capella APIs:

bc. include('workspace://Python4Capella/simplified_api/capella.py')
if False:
    from simplified_api.capella import *

The first line will produce an error because it's an EASE instruction that is not understood by PyDev but this will not prevent you from using your script.

Note: you can find exising examples in "Python4Capella/sample_scripts":https://github.com/labs4capella/python4capella/tree/master/plugins/Python4Capella/sample_scripts/.

You can also configure your Capella to show the line numbers in the PyDev editor. Use the Window Preferences menu, and type line number in the filter:

!Write/Show_line_numbers.png(Show line numbers)!

Then you can check the Show line numbers check box.

h2. Installed libraries in the Windows Python distribution

We packaged openpyxl with the Python37.zip file. You can have a look at provided sample scripts and "openpyxl project":https://openpyxl.readthedocs.io/en/stable/ page for usage.
